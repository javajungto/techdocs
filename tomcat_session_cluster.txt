-----------------------------------------------------
issue
-----------------------------------------------------
- tomcat session cluster

-----------------------------------------------------
요구되는 동작
-----------------------------------------------------
was1과 was2 어디를 방문해도 세션이 유지되게 

-----------------------------------------------------
환경(openstack vm)
-----------------------------------------------------
os : centos 6.7 x64
web  192.168.0.18 / 10.0.0.32 / httpd-2.2.15-47.el6
was1 192.168.0.24 / 10.0.0.34 / tomcat-6.0.44 / jdk 1.8.0_60
was2 192.168.0.23 / 10.0.0.33 / tomcat-6.0.44 / jdk 1.8.0_60

* cluster는 multicast로 통신을 하기 때문에 방화벽에서 열어줘야 함. 
(openstack경우 securitygroup 규칙추가에서 "다른프토토콜" 포트2 를 추가 해줘야 함. 
* 각 vm에서 iptables 비활성화함 ( /etc/init.d/iptables stop && chkconfig --level 345 iptables off)

설정
-------------------------------------------------------------
web server 
- 필요한 설정은 2가지 : mod_jk, worker 설정 
-------------------------------------------------------------
1)tomcat connector 소스 다운로드
#wget http://mirror.apache-kr.org/tomcat/tomcat-connectors/jk/tomcat-connectors-1.2.41-src.tar.gz
#tar xvfz tomcat-connectors-1.2.41-src.tar.gz 
#cd tomcat-connectors-1.2.41-src
#cd native/
#./configure --with-apxs=/usr/sbin/apxs && make && make install
#ls -lhtd /etc/httpd/modules/mod_jk.so 

2) httpd.conf 수정 
view /etc/httpd/conf/httpd.conf
...
DocumentRoot "/home/centos/public_html/WebContent"
...
LoadModule    jk_module  modules/mod_jk.so
JkWorkersFile /etc/httpd/conf/workers.properties
JkShmFile     /var/log/httpd/mod_jk.shm
JkLogFile     /var/log/httpd/mod_jk.log
JkLogFile logs/jk.log
JkLogLevel    debug
JkLogStampFormat "[%a %b %d %H:%M:%S %Y] "
JkMount  /*.jsp worker1          <== *.jsp파일만 worker1를 통해서 처리됨. html은 webserver에서 처리됨.
...

3) worker 파일 생성 
- worker1, was1, was2 이름은 임의의 값으로 변경가능함. 
- reference : http://tomcat.apache.org/connectors-doc/common_howto/loadbalancers.html

#view /etc/httpd/conf/workers.properties

worker.list=worker1
worker.worker1.type=lb
worker.worker1.balance_workers=was1,was2
#worker.worker1.sticky_session=true
worker.worker1.sticky_session=1

worker.was1.type=ajp13
worker.was1.host=192.168.0.23
worker.was1.port=8009
worker.was1.lbfactor=1

worker.was2.type=ajp13
worker.was2.host=192.168.0.24
worker.was2.port=8009
worker.was2.lbfactor=1

4) /etc/hosts, hostname 확인 
[root@centos6-1 conf]# cat /etc/hosts
127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
::1         localhost localhost.localdomain localhost6 localhost6.localdomain6
192.168.0.18	centos6-1.novalocal

[root@centos6-1 conf]# hostname
centos6-1.novalocal

5) httpd구동
[root@centos6-1 conf]# apachectl configtest
Syntax OK
[root@centos6-1 conf]# /etc/init.d/httpd restart
Stopping httpd:                                            [  OK  ]
Starting httpd:                                            [  OK  ]

-------------------------------------------------------------
was1, was2 
-------------------------------------------------------------
<jdk> 
- was1, was2에 동일하게 설치 

#yum list "*gcj*" => 설치된 패키지가 있으면 삭제 
#tar xvf jdk-8u60-linux-x64.tar -C /usr/local/
#cd /usr/local
#ln -s jdk1.8.0_60/ java
#view /etc/profile
...
export JAVA_HOME=/usr/local/java
export CATALINA_HOME=/usr/local/tomcat
export PATH=$PATH:$JAVA_HOME/bin:$CATALINA_HOME/bin

#source /etc/profile
#java -version

<tomcat> 
- was1, was2 동일하게 설치 

1) tomcat 다운로드 및 압축해제 
#wget http://mirror.apache-kr.org/tomcat/tomcat-6/v6.0.44/bin/apache-tomcat-6.0.44.tar.gz
#tar xvfz apache-tomcat-6.0.44.tar.gz -C /usr/local/
#cd /usr/local/
#ln -s apache-tomcat-6.0.44/ tomcat

2) cluster 환경설정 conf/server.xml
Cluster항목 찾아서 아래 내용 추가 
<Cluser ...> ~ </Cluster> 부분은 추가하고,
    <Engine name="Catalina" defaultHost="localhost" jvmRoute="was1"> <== jwmRoute부분에 was1은 입력해야함. (was2의 경우는 was2입력)

#view /usr/local/tomcat/conf/server.xml
...
    <Engine name="Catalina" defaultHost="localhost" jvmRoute="was1">

      <!--For clustering, please take a look at documentation at:
          /docs/cluster-howto.html  (simple how to)
          /docs/config/cluster.html (reference documentation) -->
      <!--
      <Cluster className="org.apache.catalina.ha.tcp.SimpleTcpCluster"/>
      -->        

<Cluster className="org.apache.catalina.ha.tcp.SimpleTcpCluster"
                 channelSendOptions="8">

          <Manager className="org.apache.catalina.ha.session.DeltaManager"
                   expireSessionsOnShutdown="false"
                   notifyListenersOnReplication="true"/>

          <Channel className="org.apache.catalina.tribes.group.GroupChannel">
            <Membership className="org.apache.catalina.tribes.membership.McastService"
                        address="228.0.0.4"
                        port="45564"
                        frequency="500"
                        dropTime="3000"/>
            <Receiver className="org.apache.catalina.tribes.transport.nio.NioReceiver"
                      address="auto"
                      port="4000"
                      autoBind="100"
                      selectorTimeout="5000"
                      maxThreads="6"/>

            <Sender className="org.apache.catalina.tribes.transport.ReplicationTransmitter">
              <Transport className="org.apache.catalina.tribes.transport.nio.PooledParallelSender"/>
            </Sender>
            <Interceptor className="org.apache.catalina.tribes.group.interceptors.TcpFailureDetector"/>
            <Interceptor className="org.apache.catalina.tribes.group.interceptors.MessageDispatch15Interceptor"/>
          </Channel>

          <Valve className="org.apache.catalina.ha.tcp.ReplicationValve"
                 filter=""/>
          <Valve className="org.apache.catalina.ha.session.JvmRouteBinderValve"/>

          <Deployer className="org.apache.catalina.ha.deploy.FarmWarDeployer"
                    tempDir="/tmp/war-temp/"
                    deployDir="/tmp/war-deploy/"
                    watchDir="/tmp/war-listen/"
                    watchEnabled="false"/>

          <ClusterListener className="org.apache.catalina.ha.session.JvmRouteSessionIDBinderListener"/>
          <ClusterListener className="org.apache.catalina.ha.session.ClusterSessionListener"/>
        </Cluster>    
...

4) #view view /usr/local/tomcat/conf/Catalina/localhost/cluster.xml
<?xml version="1.0" encoding="UTF-8"?>
<Context path="/" docBase="/home/centos/public_html/WebContent"
         privileged="true" antiResourceLocking="false" antiJARLocking="false">
</Context>

3) Host 환경설정 : conf/server.xml
- name, appBase 수정 
view /usr/local/tomcat/conf/server.xml
...
     <Host name="192.168.0.18" appBase="/home/centos/public_html/WebContent" unpackWARs="true" autoDeploy="true"
       xmlValidation="false" xmlNamespaceAware="false">

        <Valve className="org.apache.catalina.valves.AccessLogValve"
         directory="logs" prefix="192.168.0.18_access_log." suffix=".txt" pattern="common" resolveHosts="false"/>

         <Context path="" docBase="" debug="0" reloadable="true"/>
      </Host>


    </Engine>
  </Service>
</Server>

4)/etc/hosts , hostname 확인 (중요함) 

was1에서 
[root@was1 conf]# cat /etc/hosts
127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4 
::1         localhost localhost.localdomain localhost6 localhost6.localdomain6 
10.0.0.34   was1
192.168.0.24 was1

[root@was1 conf]# hostname 
was1

was2에서 
[root@was2 WebContent]# cat /etc/hosts
127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4 
::1         localhost localhost.localdomain localhost6 localhost6.localdomain6 
10.0.0.33   was2
192.168.0.23 was2

[root@was2 WebContent]# hostname
was2

5) tomcat 구동 
netstat -tnlp
/usr/local/tomcat/bin/catalina.sh stop && /usr/local/tomcat/bin/catalina.sh start
netstat -tnlp

정상구동후 listening port 확인
was1
[root@was1 conf]# netstat -tnlp
Active Internet connections (only servers)
Proto Recv-Q Send-Q Local Address               Foreign Address             State       PID/Program name   
tcp        0      0 0.0.0.0:22                  0.0.0.0:*                   LISTEN      1305/sshd           
tcp        0      0 ::ffff:10.0.0.34:4000       :::*                        LISTEN      3509/java           
tcp        0      0 ::ffff:127.0.0.1:8005       :::*                        LISTEN      3509/java           
tcp        0      0 :::8009                     :::*                        LISTEN      3509/java           
tcp        0      0 :::8080                     :::*                        LISTEN      3509/java           
tcp        0      0 :::22                       :::*                        LISTEN      1305/sshd           

was2
[root@was2 WebContent]# netstat -tnlp
Active Internet connections (only servers)
Proto Recv-Q Send-Q Local Address               Foreign Address             State       PID/Program name   
tcp        0      0 0.0.0.0:22                  0.0.0.0:*                   LISTEN      1308/sshd           
tcp        0      0 ::ffff:10.0.0.33:4000       :::*                        LISTEN      3099/java           
tcp        0      0 ::ffff:127.0.0.1:8005       :::*                        LISTEN      3099/java           
tcp        0      0 :::8009                     :::*                        LISTEN      3099/java           
tcp        0      0 :::8080                     :::*                        LISTEN      3099/java           
tcp        0      0 :::22                       :::*                        LISTEN      1308/sshd           

-------------------------------------------------------------
was1, was2에 테스트 jsp 생성
-------------------------------------------------------------
/home/centos/public_html/WebContent/index.jsp
/home/centos/public_html/WebContent/j.jsp
/home/centos/public_html/WebContent/WEB-INF/web.xml

#view /home/centos/public_html/WebContent/index.jsp
<%@ page contentType="text/html; charset=euc-kr" %>

<HTML>
<HEAD>
    <TITLE>Session Clustering Test</TITLE>
</HEAD>
<BODY>
<h1>Session Clustering Test</h1>
<%
    Integer ival = (Integer)session.getAttribute("_session_counter");

    if(ival==null) {
        ival = new Integer(1);
    }
    else {
        ival = new Integer(ival.intValue() + 1);
    }
    session.setAttribute("_session_counter", ival);
    System.out.println("here~~~~");
%>
Session Counter = [<b> <%= ival %> </b>]<p>
<a href="./index.jsp">[Reload]</a>
<p>
Current Session ID : <%= request.getRequestedSessionId() %><br />
</BODY>
</HTML>

#view /home/centos/public_html/WebContent/j.jsp
<% out.println("was2"); %>

#view /home/centos/public_html/WebContent/WEB-INF/web.xml
<?xml version="1.0" encoding="UTF-8"?>

<web-app xmlns="http://java.sun.com/xml/ns/j2ee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd"
         version="2.4">

    <display-name>Clustering Test</display-name>

    <distributable/>

</web-app>

-------------------------------------------------------------
테스트 시나리오
-------------------------------------------------------------
1. web1 httpd구동
2. was1 tomcat구동
   => tail -f /usr/local/tomcat/logs/catalina.out 해서 메세지 확인 
   => netstat -tnlp해서 포트 확인 (10.0.0.x:4000, 127.0.0.1:8005, 8009, 8080 확인) 
3. 웹브라우저에서 http://192.168.0.18/index.jsp방문 
   => reload 클릭하여 Session Counter 증가되는지 확인. 
4. was2 tomcat 구동
   => tail -f /usr/local/tomcat/logs/catalina.out 해서 메세지 확인 
      was2가 cluster member added되었다고 메세지 나옴.
      session state가 was2 전송됨. session state가 was2로 replicate가 완료되면 8009포트 정상 listenig 됨. 
   => netstat -tnlp해서 포트 확인 (10.0.0.x:4000, 127.0.0.1:8005, 8009, 8080 확인) 
5. 웹브라우저에서 http://192.168.0.18/index.jsp방문 
   => reload 클릭하여 3)의 Session Counter 수치가 계속적으로 증가되는지 확인. 
6. was1 stop 
   => was2로그에서 was1가 member에서 disappeared되었다고 나옴.
   => 웹브라우저 방문하여 reload시 계속 수치가 증가되는지 확인 
7. was1 up
   => was2로그에서 was1가 member에서 added 되었다고 나옴.
   => 웹브라우저 방문하여 reload시 계속 수치가 증가되는지 확인 

-------------------------------------------------------------
tomcat Clustering/Session Replication 시 아래 항목이 설정되어야함. 
-------------------------------------------------------------
-All your session attributes must implement java.io.Serializable
-Uncomment the Cluster element in server.xml
-If you have defined custom cluster valves, make sure you have the ReplicationValve defined as well under the Cluster element in server.xml
-If your Tomcat instances are running on the same machine, make sure the tcpListenPort attribute is unique for each instance, in most cases Tomcat is smart enough to resolve this on it's own by autodetecting available ports in the range 4000-4100
-Make sure your web.xml has the <distributable/> element
-If you are using mod_jk, make sure that jvmRoute attribute is set at your Engine <Engine name="Catalina" jvmRoute="node01" > and that the jvmRoute attribute value matches your worker name in workers.properties
-Make sure that all nodes have the same time and sync with NTP service!
-Make sure that your loadbalancer is configured for sticky session mode.


-------------------------------------------------------------
Reference
-------------------------------------------------------------
http://tomcat.apache.org/tomcat-6.0-doc/cluster-howto.html

http://x2framework.org/x2/handler/ForumBoard?topMenuType=0&forumId=0000000064&menuCd=53&pageNo=&x2start=Info&orderType=1&printType=0&boardId=0000000000003580&memberYn=N&listCount=20
