http://blog.exceliance.fr/2012/10/16/high-performance-waf-platform-with-naxsi-and-haproxy/

naxsi, a Web Application Firewall module for nginx.

NAXSI means Nginx Anti Xss & SQL Injection.

XSS(크로스 사이트 스크립팅) 공격 종류 및 대응 방법
- 크로스 사이트 스크립팅 취약점은, 취약한 웹 사이트에 악성 스크립트를 포함 할수 있는 손쉬운 방법 중 하나. 
- 공격자는 내부 사용자의 합법적인 인터넷 사용을 악용하는 방식으로 공격방법을 변경하게 됨.
  즉, 사용자가 정상적으로 웹사이트를 접속할때 또는 이메일을 읽을 때 공격자가 여기에 악성 스크립트를 포함하여 개인의 pc를 감염시키고, 조직 내부 시스템에 침투하여 원하는 정보를 탈취해 가고 있다.
- XSS 공격은 웹 응용에 존재하는 취약점을 기반으로 웹 서버와 클라이언트간 통신 방식인 HTTP 프로토콜 동작과정 중에 발생한다. 
- XSS 공격은 브라우저로 전달되는 데이터에 악성 스크립트가 포함되어 개인의 브라우저에서 실행되면서 해킹을 하는 것이며, 이 공격용 악성 스크립트는 공격자가 웹 서버에 구현된 웹애플리케이션의 XSS 취약점을 이용하여 서버 측 또는 URL에 미리 삽입을 해놓은 것이다. 
- 비교적 쉽게 공격할수 있으며 웹 어플리케이션 개발 시 제거되지 않아 매우 광범위하게 분포되고 있다고 할수 있다. 

XSS 공격 방법(종류)
1. 저장 XSS 공격
- 접속자가 많은 웹 사이트를 대상으로 공격자가 XSS 취약점이 있는 웹 서버에 공격용 스크립트를 입력시켜 놓으면, 방문자가 악성 스크립트가 삽입되어 있는 페이지를 읽는 순간 방문자의 브라우저를 공격하는 방식.

2. 반사 XSS 공격
- 악성 스크립트가 포함된 URL을 사용자가 클릭하도록 유도하여 URL을 클릭하면 클라이언트를 공격하는 것.
  서버가 외부에서 입력받은 값을 받아 브라우저에게 응답할때 전송하는 과정에서 입력되는 변수의 위험한 문자를 사용자에게 그대로 돌려주면서 발생한다. 

3. DOM  기반 XSS공격
- DOM환경에서 악성 URL을 통해 사용자의 브라우저를 공격하는 것. 
스피어 피싱(Spear phishing) 
- 모르는 사람에게 무작위로 피싱 이메일을 보내는 것이 아니라 특정 조직을 공격하기 위해 공격 대상 조직의 중요 시스템 및 정보와 관련 있는 특정인을 대상으로 피싱 이메일을 보내는 방식.

워터링 홀 공격
- 공격대상 조직의 특징을 빅데이타로 조사하여 구성원들이 많이 방문하는 웹 사이트에 공격 코드를 삽입하여, 공격대상 조직을 감염시키고 침투하는 방법. 


----------------------------------------------------------------------------
haproxy-1.5-dev21
----------------------------------------------------------------------------

#cd /usr/local/src/
#wget http://haproxy.1wt.eu/download/1.5/src/devel/haproxy-1.5-dev21.tar.gz
#tar xvfz haproxy-1.5-dev21.tar.gz
#cd haproxy-1.5-dev21
#make TARGET=linux26 CPU=x86_64
#make install target=linux26
#which haproxy
#cp haproxy /usr/sbin/
#ls -l /etc/haproxy/
#haproxy -f /etc/haproxy.cfg  -D

----------------------------------------------------------------------------
nginx-1.4.6 / naxsi-0.53-2
----------------------------------------------------------------------------

#yum groupinstall "development tools"
#yum install pcre pcre-devel zlib zlib-devel
#cd /usr/local/src/
#wget https://github.com/nbs-system/naxsi/archive/0.53-2.tar.gz
#wget http://nginx.org/download/nginx-1.4.6.tar.gz

#tar xvfz nginx-1.4.6.tar.gz
#mv 0.53-2.tar.gz naxsi-core-0.53-2.tar.gz
#tar xvfz naxsi-core-0.53-2.tar.gz
#ln -s nginx-1.4.6 nginx
#ln -s naxsi-0.53-2 naxsi
#cd nginx
#./configure --conf-path=/etc/nginx/nginx.conf --add-module=../naxsi/naxsi_src/ --error-log-path=/var/log/nginx/err --prefix=/opt/nginx --without-mail_pop3_module --without-mail_imap_module --without-mail_smtp_module
#make && make install
#cd /etc/nginx/
#cp /usr/local/src/naxsi/naxsi_config/naxsi_core.rules .
#touch /tmp/naxsi_rules.tmp
#mkdir /etc/nginx/sites-enabled
#view /etc/nginx/nginx.conf
#cd /etc/nginx/
#cp nginx.conf nginx.conf.orig
#view nginx.conf
#cd /etc/nginx/sites-enabled/
#view default

#view /etc/nginx/test.rules

LearningMode; #Enables learning mode
SecRulesEnabled;
#SecRulesDisabled;
DeniedUrl "/RequestDenied";

include "/tmp/naxsi_rules.tmp";

## check rules
CheckRule "$SQL >= 8" BLOCK;
CheckRule "$RFI >= 8" BLOCK;
CheckRule "$TRAVERSAL >= 4" BLOCK;
CheckRule "$EVADE >= 4" BLOCK;
CheckRule "$XSS >= 8" BLOCK;

#useradd nginx -s /bin/false -d /var/lib/nginx -c "Nginx user"

#/opt/nginx/sbin/nginx
#/opt/nginx/sbin/nginx –s stop
#/opt/nginx/sbin/nginx –s reloadtail -f /var/log/nginx/*logview /etc/nginx/nginx.conf
#View /etc/nginx/sites-enabled/default



