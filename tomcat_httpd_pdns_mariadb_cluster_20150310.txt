download at /usr/local/src/
- jdk ( jdk-8u31-linux-x64.tar ) 
  http://java.sun.com

- tomcat ( apache-tomcat-8.0.18.tar.gz )
  http://tomcat.apache.org

- tomcat-connectors ( tomcat-connectors-1.2.40-src.tar.gz )
  http://tomcat.apache.org/connectors-doc/
  
- mariadb-java-client.jar ( mariadb-java-client-1.1.8.jar )
  https://downloads.mariadb.org/client-java/
  https://mariadb.com/kb/en/mariadb/about-the-mariadb-java-client/

-----------------------------------------------------
0. httpd pdns
-----------------------------------------------------
yum install php php-mcrypt php-pdo php-mysql pdns pdns-backend-mysql httpd httpd-devel php-devel php-gd php-pear php-xml php-xmlrpc php-mbstring php-mhash

-----------------------------------------------------
1. jdk
-----------------------------------------------------
#yum list "*gcj*"
#yum remove "*gcj*"
#tar xvf jdk-8u31-linux-x64.tar -C /usr/local/
#ln -s /usr/local/jdk1.8.0_31/ /usr/local/java
#view /etc/profile
...
export JAVA_HOME=/usr/local/java
export CATALINA_HOME=/usr/local/tomcat
export PATH=$PATH:$JAVA_HOME/bin:$CATALINA_HOME/bin
...

#source /etc/profile
#java -version

-----------------------------------------------------
2. tomcat 
-----------------------------------------------------
#tar xvf apache-tomcat-8.0.18.tar.gz -C /usr/local/
#ln -s /usr/local/apache-tomcat-8.0.18/ /usr/local/tomcat
#/usr/local/tomcat/bin/startup.sh 
#netstat -tnlp
#tail -f /usr/local/tomcat/logs/catalina.out 

http://ip:8080 
 > Examples : Servlets, JSP, WebSocket 클릭해서 정상작동하는지 확인
 
-----------------------------------------------------
3. tomcat-connectors ( mod_jk.so )
-----------------------------------------------------
#tar xvfz tomcat-connectors-1.2.40-src.tar.gz 
#cd tomcat-connectors-1.2.40-src
#cd native/
#./configure --with-apxs=/usr/sbin/apxs 
#make && make install
# ls -l /etc/httpd/modules/|grep mod_jk
-rwxr-xr-x 1 root root 1161249 2015-02-10 02:31 mod_jk.so

-----------------------------------------------------
4. 연동 설정 ( workers.properties, mod_jk, server.xml )
-----------------------------------------------------
#view /etc/httpd/conf/workers.properties
...
# Define 1 real worker using ajp13
worker.list=worker1
# Set properties for worker1 (ajp13)
worker.worker1.type=ajp13
worker.worker1.host=localhost
worker.worker1.port=8009
...

#view /etc/httpd/conf/httpd.conf 
...
NameVirtualHost *:80
...
<VirtualHost *:80>
    ServerAdmin webmaster@XXXX.com
    DocumentRoot /home/XXXX/public_html
    ServerName www.XXXX.net
    ServerAlias 192.168.0.222
    ErrorLog logs/XXXX.com-error_log
    CustomLog logs/XXXX.com-access_log common
    JkMount /*.jsp worker1
    JkMount /servlet/* worker1
</VirtualHost>
...
# Load mod_jk module
# Update this path to match your modules location
LoadModule    jk_module  modules/mod_jk.so
# Declare the module for <IfModule directive> (remove this line on Apache 2.x)
#AddModule     mod_jk.c
# Where to find workers.properties
# Update this path to match your conf directory location (put workers.properties next to httpd.conf)
JkWorkersFile /etc/httpd/conf/workers.properties
# Where to put jk shared memory
# Update this path to match your local state directory or logs directory
JkShmFile     /var/log/httpd/mod_jk.shm
# Where to put jk logs
# Update this path to match your logs directory location (put mod_jk.log next to access_log)
JkLogFile     /var/log/httpd/mod_jk.log
# Set the jk log level [debug/error/info]
JkLogLevel    info
# Select the timestamp log format
JkLogStampFormat "[%a %b %d %H:%M:%S %Y] "
# Send everything for context /examples to worker named worker1 (ajp13)
JkMount  /examples/* worker1
...

#view /usr/local/tomcat/conf/server.xml
...
<Engine ...>
...
     <Host name="192.168.0.222" appBase="/home/XXXX/public_html" unpackWARs="true" autoDeploy="true"
       xmlValidation="false" xmlNamespaceAware="false">

        <Valve className="org.apache.catalina.valves.AccessLogValve"
         directory="logs" prefix="192.168.0.222_access_log." suffix=".txt" pattern="common" resolveHosts="false"/>

         <Context path="" docBase="" debug="0" reloadable="true"/>
      </Host>
...
</Engine>

연동 확인
#mkdir /home/XXXX/public_html/jwpark/
#view /home/XXXX/public_html/jwpark/j.jsp
<%
        System.out.println("test");
%>
http://ip/jwpark/j.jsp
#tail -f /usr/local/tomcat/logs/catalina.out

-----------------------------------------------------
5. mariadb-java-client ( jdbc 연동 ) 
-----------------------------------------------------
#cp mariadb-java-client-1.1.8.jar /usr/local/java/jre/lib/ext/

#view /home/XXXX/public_html/jwpark/mysql.jsp

<%@ page language="java" import="java.sql.*,java.io.*" %>

   <html><body>
   <meta http-equiv="Content-Type" content="text/html; charset=euc-kr">
   
   <%@ page contentType="text/html; charset=EUC-KR" %>
   
   <%
   java.sql.Connection conn = null;
   java.sql.PreparedStatement ps = null;
   java.sql.ResultSet rs = null;
   String strRet = null;
   int    intRet = 0;
   
     try { 
	Class.forName("org.mariadb.jdbc.Driver");
     } catch (ClassNotFoundException e ) { out.println(e); }
   
     try { 
	conn =   java.sql.DriverManager.getConnection("jdbc:mariadb://localhost:3306/mysql","root","");
     } catch (java.sql.SQLException e) { out.println(e); }
   
     try { ps = conn.prepareStatement("select host, user from user where user =   'root' ");
           rs = ps.executeQuery();
   
           rs.next();
           out.println("DB connected..." + "<br><br>");
           out.println("id:  " + rs.getString("host") + "<br>");
           out.println("user:  " + rs.getString("user") + "<br><br>");
           rs.close();
           ps.close();
           conn.close();
   
         } catch (java.sql.SQLException e) { System.out.println(e); }
           catch (java.io.UnsupportedEncodingException e) {
           System.out.println(e); }
   %>
   </body></html>


http://ip/jwpark/mysql.jsp

-----------------------------------------------------
6. pdns 
-----------------------------------------------------

centos 6.x pdns 설치 
<install powerdns / 2015.03.10>

rpm -Uvh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm

yum install php php-mcrypt php-pdo php-mysql pdns pdns-backend-mysql httpd httpd-devel php-devel php-gd php-pear php-xml php-xmlrpc php-mbstring php-mhash

db / table 생성 
<= https://doc.powerdns.com/md/authoritative/backend-generic-mypgsql/

create database powerdns;
grant all privileges on powerdn.* to yyyyy@localhost identified by 'XXXXX'; <== 암호입력시 특수문자제외 
flush privileges;

use powerdns;

CREATE TABLE domains (
  id                    INT AUTO_INCREMENT,
  name                  VARCHAR(255) NOT NULL,
  master                VARCHAR(128) DEFAULT NULL,
  last_check            INT DEFAULT NULL,
  type                  VARCHAR(6) NOT NULL,
  notified_serial       INT DEFAULT NULL,
  account               VARCHAR(40) DEFAULT NULL,
  PRIMARY KEY (id)
) Engine=InnoDB;

CREATE UNIQUE INDEX name_index ON domains(name);


CREATE TABLE records (
  id                    INT AUTO_INCREMENT,
  domain_id             INT DEFAULT NULL,
  name                  VARCHAR(255) DEFAULT NULL,
  type                  VARCHAR(10) DEFAULT NULL,
  content               VARCHAR(64000) DEFAULT NULL,
  ttl                   INT DEFAULT NULL,
  prio                  INT DEFAULT NULL,
  change_date           INT DEFAULT NULL,
  disabled              TINYINT(1) DEFAULT 0,
  ordername             VARCHAR(255) BINARY DEFAULT NULL,
  auth                  TINYINT(1) DEFAULT 1,
  PRIMARY KEY (id)
) Engine=InnoDB;

CREATE INDEX nametype_index ON records(name,type);
CREATE INDEX domain_id ON records(domain_id);
CREATE INDEX recordorder ON records (domain_id, ordername);


CREATE TABLE supermasters (
  ip                    VARCHAR(64) NOT NULL,
  nameserver            VARCHAR(255) NOT NULL,
  account               VARCHAR(40) NOT NULL,
  PRIMARY KEY (ip, nameserver)
) Engine=InnoDB;


CREATE TABLE comments (
  id                    INT AUTO_INCREMENT,
  domain_id             INT NOT NULL,
  name                  VARCHAR(255) NOT NULL,
  type                  VARCHAR(10) NOT NULL,
  modified_at           INT NOT NULL,
  account               VARCHAR(40) NOT NULL,
  comment               VARCHAR(64000) NOT NULL,
  PRIMARY KEY (id)
) Engine=InnoDB;

CREATE INDEX comments_domain_id_idx ON comments (domain_id);
CREATE INDEX comments_name_type_idx ON comments (name, type);
CREATE INDEX comments_order_idx ON comments (domain_id, modified_at);


CREATE TABLE domainmetadata (
  id                    INT AUTO_INCREMENT,
  domain_id             INT NOT NULL,
  kind                  VARCHAR(32),
  content               TEXT,
  PRIMARY KEY (id)
) Engine=InnoDB;

CREATE INDEX domainmetadata_idx ON domainmetadata (domain_id, kind);


CREATE TABLE cryptokeys (
  id                    INT AUTO_INCREMENT,
  domain_id             INT NOT NULL,
  flags                 INT NOT NULL,
  active                BOOL,
  content               TEXT,
  PRIMARY KEY(id)
) Engine=InnoDB;

CREATE INDEX domainidindex ON cryptokeys(domain_id);


CREATE TABLE tsigkeys (
  id                    INT AUTO_INCREMENT,
  name                  VARCHAR(255),
  algorithm             VARCHAR(50),
  secret                VARCHAR(255),
  PRIMARY KEY (id)
) Engine=InnoDB;

CREATE UNIQUE INDEX namealgoindex ON tsigkeys(name, algorithm);

InnoDB storate engine 사용할때,

ALTER TABLE `records` ADD CONSTRAINT `records_ibfk_1` FOREIGN KEY (`domain_id`)
REFERENCES `domains` (`id`) ON DELETE CASCADE;

<install poweradmin> 

download http://www.poweradmin.org 

#cd /usr/local/src/
#tar xvf poweradmin-2.1.7.tar 
#cd poweradmin-2.1.7/inc
#cp config-me.inc.php config.inc.php 
#useradd user01
#cd /home/
#mkdir /home/user01/public_html
#mv /usr/local/src/poweradmin-2.1.7/* /home/user01/public_html/
#chown -R user01.user01 /home/user01/
#chmod 755 /home/user01/
#apachectl configtest
#apachectl restart
#view /etc/httpd/conf/httpd.conf 
...
NameVirtualHost *:80
...
<VirtualHost *:80>
    ServerAdmin webmaster@dummy-host.example.com
    DocumentRoot /home/user01/public_html
    ServerName xxx.com
    ErrorLog logs/xxx.com-error_log
    CustomLog logs/xxx.com-access_log common
</VirtualHost>
...
 
#apachectl configtest
#apachectl restart

#view /etc/pdns/pdns.conf
...
launch=gmysql
gmysql-host=127.0.0.1
gmysql-user=powerdns
gmysql-password=XXXXX
gmysql-dbname=powerdns
...

#service pdns restart

http://x.x.x.x/install/ 

웹에서 입력하는 정보는 웹에서 로그인할때 사용됨(db에 저장됨).
설치는 그냥 next 진행후, 아래와 같이 파일 직접 수정.
view inc/config.inc.php에서 해당 정보 저장

....
$db_host = 'localhost';
$db_port = '3306';
$db_user = 'powerdns';
$db_pass = 'PWD';
$db_name = 'powerdns';
$db_type = 'mysql';
//$db_file              = '';           # used only for SQLite, provide full path to database file
//$db_debug             = false;        # show all SQL queries
$db_layer               = 'PDO';        # or MDB2
//$db_ssl_ca            = '';
// Security settings
// This should be changed upon install
$session_key = 'djfkjoejiwfiojvljwoejjbojejriojeo';  <==임의의 값으로 변경. 
...

#rm -rf /home/user01/public_html/install 

설치 완료후 admin / 입력한암호 

-----------------------------------------------------
7. mariadb cluster 
-----------------------------------------------------

#view /etc/yum.repos.d/MariaDB.repo

[mariadb]
name = MariaDB
baseurl = http://yum.mariadb.org/10.0/centos6-amd64
gpgkey=https://yum.mariadb.org/RPM-GPG-KEY-MariaDB
gpgcheck=1

Installing MariaDB Galera Cluster with YUM
#yum install MariaDB-Galera-server MariaDB-client galera

[root@local1 my.cnf.d]# cat server.cnf

[server]

[mysqld]
character-set-server=utf8
log_bin=/var/lib/mysql/mariadb-bin
log_bin_index=/var/lib/mysql/mariadb-bin.index
pid-file = /var/lib/mysql/mysql.pid
socket = /var/lib/mysql/mysql.sock
log_error=/var/log/mysql.log

[galera]

[embedded]

[mariadb]
query_cache_size=0
binlog_format=ROW
default_storage_engine=innodb
innodb_autoinc_lock_mode=2
innodb_locks_unsafe_for_binlog=1
wsrep_provider=/usr/lib64/galera/libgalera_smm.so
wsrep_cluster_address=gcomm://192.168.0.226,192.168.0.130
wsrep_cluster_name='cluster1'
wsrep_node_address='192.168.0.222'
wsrep_node_name='local1'
wsrep_sst_method=rsync
wsrep_sst_auth=root:xxxxx

[mariadb-10.0]

확인)
show status like 'wsrep_%';
...

