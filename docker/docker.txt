#---------------------------------------------------------------------------
# install_docker.sh
#---------------------------------------------------------------------------
#!/bin/bash
#https://docs.docker.com/engine/install/centos/
yum clean all &&
yum remove docker docker-client docker-client-latest docker-common docker-latest docker-latest-logrotate docker-logrotate docker-engine &&
yum install -y yum-utils &&
yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo &&
yum install docker-ce docker-ce-cli containerd.io -y &&
systemctl start docker &&
docker run hello-world

#---------------------------------------------------------------------------
# example
#---------------------------------------------------------------------------
docker images
docker search centos
docker search --filter "is-official=true" centos
docker pull centos
docker pull centos:7
docker run --name centos7_nginx_cdn -it centos:7
[root@3d2e1dcdc667 ~]#
yum groupinstall "Development tools" -y &&
yum install pcre pcre-devel openssl openssl-devel gd gd-devel perl perl-devel perl-ExtUtils-Embed GeoIP-devel git wget net-tools -y &&
yum -y update &&

cd /usr/local/src/
wget http://nginx.org/download/nginx-1.18.0.tar.gz
tar xvfz nginx-1.18.0.tar.gz
git clone https://github.com/vozlt/nginx-module-vts.git
git clone https://github.com/FRiCKLE/ngx_cache_purge.git

cd /usr/local/src/nginx-1.18.0
./configure --prefix=/usr/local/nginx-1.18.0 --user=nginx --group=nginx \
--with-http_addition_module \
--with-http_auth_request_module \
--with-http_perl_module \
--with-http_geoip_module \
--with-http_gzip_static_module \
--with-http_gunzip_module \
--with-http_image_filter_module \
--with-http_realip_module \
--with-http_ssl_module \
--with-http_stub_status_module \
--with-http_sub_module \
--add-module=/usr/local/src/nginx-module-vts \
--add-module=/usr/local/src/ngx_cache_purge

make && make install

#view /etc/systemd/system/nginx.service

[Unit]
Description=The NGINX HTTP and reverse proxy server
After=syslog.target network.target remote-fs.target nss-lookup.target

[Service]
Type=forking
PIDFile=/run/nginx.pid
ExecStartPre=/usr/local/nginx-1.18.0/sbin/nginx -t
ExecStart=/usr/local/nginx-1.18.0/sbin/nginx
ExecReload=/usr/local/nginx-1.18.0/sbin/nginx -s reload
ExecStop=/usr/local/nginx-1.18.0/sbin/nginx -s stop
#ExecStop=/bin/kill -s QUIT $MAINPID
PrivateTmp=true

[Install]
WantedBy=multi-user.target


useradd nginx
cp /usr/local/src/nginx.conf.ex /usr/local/nginx-1.18.0/conf/nginx.conf
#view /usr/local/nginx-1.18.0/conf/nginx.conf
mkdir -p /data/nginx/cache && chown -R nginx:nginx /data

/usr/local/nginx-1.18.0/sbin/nginx -t
systemctl enable nginx.service
systemctl start nginx.service

...

# docker ps -a
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS                     PORTS               NAMES
3d2e1dcdc667        centos:7            "/bin/bash"              13 minutes ago      Exited (1) 3 seconds ago                       centos7_nginx_cdn
73faad47c40a        49e61650d7ce        "/bin/bash"              2 hours ago         Exited (0) 2 hours ago                         centos02
3362f4642489        centos:7            "/bin/bash"              2 hours ago         Exited (0) 2 hours ago                         centos01
799d7de70014        centos:7            "/bin/bash"              2 hours ago         Exited (0) 2 hours ago                         centos7
619705ab2386        e316a2e4139d        "/bin/bash -C /usr/l…"   2 hours ago         Exited (1) 2 hours ago                         c7
94185165939d        hello-world         "/hello"                 2 hours ago         Exited (0) 2 hours ago                         elastic_mendel
d414f7662c02        hello-world         "/hello"                 2 hours ago         Exited (0) 2 hours ago                         eloquent_payne

[root@vb-c7 nginx_cdn]# docker
docker        docker-init   docker-proxy  dockerd

[root@vb-c7 nginx_cdn]# docker commit -a "by jwp" 1050c1559104 centos7_nginx_cdn:v0.2
sha256:86aff080e5fee24efebff748ffcb2c66a024ac5d277a085cb0cc9fc062c60a18

docker save -o centos7_nginx_cdn.tar centos7_nginx_cdn:v0.2

on) the other machine
#docker load -i centos7_nginx_cdn.tar

#docker images
REPOSITORY                           TAG                                              IMAGE ID            CREATED             SIZE
centos7_nginx_cdn                    v0.2                                             7064745702cb        3 hours ago         763MB
<none>                               <none>                                           c74f828cd7a4        6 hours ago         808MB
...

#docker run --name centos7_nginx_cdn -it centos7_nginx_cdn:v0.2

#docker run --name centos7_nginx_cdn -it centos7_nginx_cdn:v0.2
docker: Error response from daemon: Conflict. The container name "/centos7_nginx_cdn" is already in use by container "3609d329c0c06ee4e73cc59a7bfc5cd5e1ffbe3a100d105d466783a5cbf884b8". You have to remove (or rename) that container to be able to reuse that name.
See 'docker run --help'.

#docker rm centos7_nginx_cdn
centos7_nginx_cdn

#docker run --privileged -d --name centos7_nginx_cdn  centos7_nginx_cdn:v0.2 init
#docker exec -it centos7_nginx_cdn bash

#docker run --privileged -d -p 80:80 --name centos7_nginx_cdn centos7_nginx_cdn:v0.2 init
#docker exec centos7_nginx_cdn bash

웹브라우저 http://localhost 방문

#docker run --privileged -d -p 80:80 -v /root/bin/nginx.conf:/usr/local/nginx-1.18.0/conf/nginx.conf --name centos7_nginx_cdn centos7_nginx_cdn:v0.5 init
#docker start centos7_nginx_cdn

#---------------------------------------------------------------------------
# 생성
#---------------------------------------------------------------------------
view Dockerfile
FROM centos:7
RUN yum groupinstall "Development tools" -y
RUN yum install pcre pcre-devel openssl openssl-devel gd gd-devel perl perl-devel perl-ExtUtils-Embed GeoIP-devel git wget net-tools -y
RUN yum -y update

#docker build -t centos7_nginx_cdn:v0.1 .
#docker ps -a
#docker images
#docker run --privileged --name centos7_nginx_cdn centos:7 init
#docker exec -it centos7_nginx_cdn bash
nginx 컴파일 설치
#docker commit -a "by jwp" 540ff1176c6f centos7_nginx_cdn:v0.1
#docker stop centos7_nginx_cdn && docker rm centos7_nginx_cdn
#docker run --privileged -d -p 80:80 --name centos7_nginx_cdn centos7_nginx_cdn:v0.1 init
#docker stop centos7_nginx_cdn && docker rm centos7_nginx_cdn
view nginx.conf <== on host, for real service
#docker run --privileged -d -p 80:80 -v /root/bin/nginx.conf:/usr/local/nginx-1.18.0/conf/nginx.conf --name centos7_nginx_cdn centos7_nginx_cdn:v0.1 init
#docker exec -it centos7_nginx_cdn bash <=== confirm

#docker login
#docker run --privileged -d -p 80:80 --name centos7_nginx_cdn centos7_nginx_cdn:v0.1
#docker ps -a
#docker commit -a "by jwp" 1529484617fd javajungto/centos7_nginx_cdn:v0.1
#docker push javajungto/centos7_nginx_cdn:v0.1
#docker search javajungto

on the other machine
#docker pull javajungto/centos7_nginx_cdn:v0.1
#default nginx.conf
#docker run --privileged -d -p 80:80 --name centos7_nginx_cdn javajungto/centos7_nginx_cdn:v0.1 init
#docker stop centos7_nginx_cdn && docker rm centos7_nginx_cdn

#real nginx.conf
#docker run --privileged -d -p 80:80 -v /Users/jwpark/docker/nginx.conf:/usr/local/nginx-1.18.0/conf/nginx.conf --name centos7_nginx_cdn javajungto/centos7_nginx_cdn:v0.1 init

삭제
#docker rmi -f grafana/grafana

#---------------------------------------------------------------------------
# ref
#---------------------------------------------------------------------------

https://youngmind.tistory.com/entry/Docker-%EA%B0%95%EC%A2%8C-4-%EB%8F%84%EC%BB%A4-%EC%9D%B4%EB%AF%B8%EC%A7%801
https://www.snoopybox.co.kr/1756

yum install -y yum-utils && yum-config-manager  --add-repo https://download.docker.com/linux/centos/docker-ce.repo && yum -y install docker-ce docker-ce-cli containerd.io && systemctl start docker && systemctl enable docker

firewall-cmd --permanent --zone=public --add-port=6443/tcp

iptables -A INPUT -i enp0s3 -p tcp --dport 2377 -j ACCEPT


# cat yum.yml
---
- name: yum update on cdn
  hosts: cdn
  tasks:
   - name : yum update
     yum: name=* state=latest

- name: yum update on nfs
  hosts: nfs
  tasks:
   - name : yum update
     yum: name=* state=latest

# cat docker.yml
---
- name: yum update on cdn
  hosts: cdn
  tasks:
   - name: install yum-utils
     yum: name={{ item }} state=present
     loop: ['yum-utils']
   - name: add docker repo
     get_url:
       url: https://download.docker.com/linux/centos/docker-ce.repo
       dest: /etc/yum.repos.d/docker-ce.repo
     become: yes
   - name: install docker-ce docker-ce-cli containerd.io
     yum: name={{ item }} state=present
     loop: ['docker-ce','docker-ce-cli','containerd.io']
   - name: start docker service
     service:
       name: docker
       state: started
       enabled: yes
     become: yes

Install Compose on Linux systems
curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose
ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose
docker-compose --version

#---------------------------------------------------------------------------
# 2022.11.20
#---------------------------------------------------------------------------
docker 설치

view install_docker.sh

#!/bin/bash
#https://docs.docker.com/engine/install/centos/
yum clean all &&
yum remove docker docker-client docker-client-latest docker-common docker-latest docker-latest-logrotate docker-logrotate docker-engine &&
yum install -y yum-utils &&
yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo &&
yum install docker-ce docker-ce-cli containerd.io -y &&
systemctl enable docker &&
systemctl start docker &&
docker run hello-world

# docker run -i -t ubuntu:20.04 /bin/bash
root@6ec2c6890024:/# apt-get update
root@6ec2c6890024:/# apt-get install -y git
root@6ec2c6890024:/# exit
# docker diff 6ec2c6890024
# docker commit 6ec2c6890024 ubuntu_with_git

# docker run -i -t ubuntu_with_git /bin/bash
root@97d37b8fcda1:/# apt-get install -y openjdk-8-jdk
root@97d37b8fcda1:/# exit
# docker commit 97d37b8fcda1 ubuntu_with_git_and_jdk

[root@localhost ~]# docker images
REPOSITORY                TAG       IMAGE ID       CREATED              SIZE
ubuntu_with_git_and_jdk   latest    2d9c685c5466   About a minute ago   678MB
ubuntu_with_git           latest    9849fd4ad6e2   8 minutes ago        214MB
ubuntu                    20.04     680e5dfb52c7   3 weeks ago          72.8MB
hello-world               latest    feb5d9fea6a5   14 months ago        13.3kB

[root@localhost dockerfile1]# view Dockerfile

FROM ubuntu:20.04
RUN apt-get update && \
    apt-get install -y python

[root@localhost dockerfile1]# docker build -t ubuntu_with_python

[root@localhost dockerfile1]# docker images
REPOSITORY                TAG       IMAGE ID       CREATED              SIZE
ubuntu_with_python        latest    7fc511dbe352   About a minute ago   149MB
ubuntu_with_git_and_jdk   latest    2d9c685c5466   5 minutes ago        678MB
ubuntu_with_git           latest    9849fd4ad6e2   11 minutes ago       214MB
ubuntu                    20.04     680e5dfb52c7   3 weeks ago          72.8MB
hello-world               latest    feb5d9fea6a5   14 months ago        13.3kB


[root@localhost dockerfile2]# view Dockerfile
FROM ubuntu:20.04
RUN apt-get update && \
    apt-get install -y python
COPY hello.py .
ENTRYPOINT ["python","hello.py"]

[root@localhost dockerfile2]# view hello.py
print "Hello World from Python !!"

[root@localhost dockerfile2]# docker build -t hello_world_python .
[root@localhost dockerfile2]# docker run hello_world_python
Hello World from Python !!


----

[root@localhost dockerfile3]# cat Dockerfile
FROM ubuntu:20.04
RUN apt-get update && \
    apt-get install -y python
COPY hello.py .

ENTRYPOINT ["python","hello.py"]

[root@localhost dockerfile3]# cat hello.py
import os
print "Hello World from Python %s !" % os.environ['NAME']

[root@localhost dockerfile3]# docker build -t hello_world_python_name .

[root@localhost dockerfile3]# docker run -e NAME=Test hello_world_python_name
Hello World from Python Test !

----

[root@localhost dockerfile3]# cat Dockerfile
FROM ubuntu:20.04
RUN apt-get update && \
    apt-get install -y python
COPY hello.py .
ENV NAME Test
ENTRYPOINT ["python","hello.py"]

[root@localhost dockerfile3]# cat hello.py
import os
print "Hello World from Python %s !" % os.environ['NAME']

[root@localhost dockerfile3]# docker build -t hello_world_python_name .

[root@localhost dockerfile3]# docker run -e NAME=Test hello_world_python_name
Hello World from Python Test !

----

[root@localhost dockerfile3]# docker run -d -t ubuntu:20.04
d2e9d8c67a3fde0c3684512d168d132f74e905085b136ac5b054f540123f0d31

[root@localhost dockerfile3]# docker ps
CONTAINER ID   IMAGE          COMMAND   CREATED          STATUS          PORTS     NAMES
d2e9d8c67a3f   ubuntu:20.04   "bash"    13 seconds ago   Up 13 seconds             gracious_carver

[root@localhost dockerfile3]# docker ps -a
CONTAINER ID   IMAGE                     COMMAND             CREATED              STATUS                          PORTS     NAMES
d2e9d8c67a3f   ubuntu:20.04              "bash"              4 seconds ago        Up 4 seconds                              gracious_carver
7615a90625c7   hello_world_python_name   "python hello.py"   About a minute ago   Exited (0) About a minute ago             relaxed_hermann
4d8294a0bf67   hello_world_python_name   "python hello.py"   About a minute ago   Exited (0) About a minute ago             nervous_solomon
0017a46d0271   5d1ac36e5088              "python hello.py"   2 minutes ago        Exited (0) 2 minutes ago                  vigilant_carver
11b68fd636ca   5d1ac36e5088              "python hello.py"   3 minutes ago        Exited (0) 3 minutes ago                  clever_hodgkin
40c9186f98d1   hello_world_python_name   "python hello.py"   4 minutes ago        Exited (0) 4 minutes ago                  laughing_chebyshev
7e85f948907a   727d240d39ea              "python hello.py"   4 minutes ago        Exited (1) 4 minutes ago                  elastic_sutherland
8728bc95b189   727d240d39ea              "python hello.py"   5 minutes ago        Exited (1) 5 minutes ago                  frosty_ptolemy
59a005a9493c   fce95ab6da2d              "python hello.py"   6 minutes ago        Exited (1) 6 minutes ago                  dazzling_greider
df6364b2948a   77cf36a9eb5e              "python hello.py"   6 minutes ago        Exited (1) 6 minutes ago                  elated_feynman
31838a6af99e   hello_world_python        "python hello.py"   24 minutes ago       Exited (0) 24 minutes ago                 amazing_nightingale
404fc0725d31   hello_world_python        "python hello.py"   26 minutes ago       Exited (0) 26 minutes ago                 recursing_meitner
97d37b8fcda1   ubuntu_with_git           "/bin/bash"         42 minutes ago       Exited (0) 37 minutes ago                 sweet_visvesvaraya
6ec2c6890024   ubuntu:20.04              "/bin/bash"         47 minutes ago       Exited (0) 46 minutes ago                 romantic_curran
65a85c7bba54   hello-world               "/hello"            48 minutes ago       Exited (0) 48 minutes ago                 adoring_mirzakhani

[root@localhost dockerfile3]# docker stop d2e9d8c67a3f

---

[root@localhost ~]# docker run -d tomcat

[root@localhost ~]# docker ps
CONTAINER ID   IMAGE     COMMAND             CREATED         STATUS         PORTS      NAMES
7dfd7bfce0af   tomcat    "catalina.sh run"   8 seconds ago   Up 6 seconds   8080/tcp   kind_chaum

[root@localhost ~]# docker logs 7dfd7bfce0af

[root@localhost ~]# docker stop 7dfd7bfce0af

[root@localhost ~]# docker run -d -p 8080:8080 tomcat

[root@localhost ~]# docker run -d -p 192.168.0.21:8080:8080 tomcat

on host

[root@localhost ~]# ifconfig docker0
docker0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500
        inet 172.17.0.1  netmask 255.255.0.0  broadcast 172.17.255.255
        inet6 fe80::42:7eff:fe25:4324  prefixlen 64  scopeid 0x20<link>
        ether 02:42:7e:25:43:24  txqueuelen 0  (Ethernet)
        RX packets 47500  bytes 2573186 (2.4 MiB)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 106555  bytes 192363733 (183.4 MiB)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

[root@localhost ~]# docker inspect 2a2481274f0e

[root@localhost ~]# docker network ls
NETWORK ID     NAME      DRIVER    SCOPE
cd179853933f   bridge    bridge    local
c7f028db8f66   host      host      local
d2936bfed8dc   none      null      local

bind: address already in use
[root@localhost ~]# docker run -d -P tomcat

볼륨

-v <호스트경로>:<컨테이너_경로>
[root@localhost ~]# docker run -i -t -v ~/docker_ubuntu:/host_directory ubuntu:20.04 /bin/bash
root@777abece705c:/# touch /host_directory/file.txt
root@777abece705c:/# exit
exit
[root@localhost ~]# ls -lhtr ~/docker_ubuntu/
total 0
-rw-r--r-- 1 root root 0 Nov 20 17:02 file.txt

[root@localhost dockerfile4]# docker run -d --name tomcat tomcat
[root@localhost dockerfile4]# docker logs tomcat

삭제
컨테이너 클린업
[root@localhost dockerfile4]# docker rm 8822229462a5
[root@localhost dockerfile4]# docker container prune (정지된 컨테이너 모두 삭제)
[root@localhost dockerfile4]# docker run --rm hello-world (컨테이너 종료되면 자동으로 삭제)

이미지 클린업
[root@localhost dockerfile4]# docker images
[root@localhost dockerfile4]# docker rmi aa78955cdb73
[root@localhost dockerfile4]# docker image prune

[root@localhost dockerfile4]# docker volume ls
[root@localhost dockerfile4]# docker volume prune
[root@localhost dockerfile4]# docker system prune

#---------------------------------------------------------------------------
# rocky linux 9
#---------------------------------------------------------------------------

docker run -i -t --name rocky rockylinux:9.0 /bin/bash

docker run -i -t rockylinux /bin/bash

# cat Dockerfile
FROM rockylinux:9.0
RUN yum -y update && \
    yum -y install npm && \
    cd /home/streamon &&


docker build -t rockylinux .

---


